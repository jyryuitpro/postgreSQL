CREATE TABLE EMPLOYEE
(
    EMPLOYEE_ID INT PRIMARY KEY,
    FIRST_NAME  VARCHAR(255) NOT NULL,
    LAST_NAME   VARCHAR(255) NOT NULL,
    MANAGER_ID  INT, -- 관리자
    FOREIGN KEY (MANAGER_ID)
        REFERENCES EMPLOYEE (EMPLOYEE_ID)
        ON DELETE CASCADE
);

INSERT INTO EMPLOYEE (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, MANAGER_ID)
VALUES (1, 'Windy', 'Hays', NULL),
       (2, 'Ava', 'Christensen', 1),
       (3, 'Hassan', 'Conner', 1),
       (4, 'Anna', 'Reeves', 2),
       (5, 'Sau', 'Norman', 2),
       (6, 'Kelsie', 'Hays', 3),
       (7, 'Tory', 'Goff', 3),
       (8, 'Salley', 'Lester', 3);

commit;

SELECT *
FROM EMPLOYEE;

SELECT E.FIRST_NAME || ' ' || E.LAST_NAME EMPLOYEE, M.FIRST_NAME || ' ' || M.LAST_NAME MANAGER
FROM EMPLOYEE E
         INNER JOIN EMPLOYEE M ON E.MANAGER_ID = M.EMPLOYEE_ID
ORDER BY MANAGER;

SELECT E.FIRST_NAME || ' ' || E.LAST_NAME EMPLOYEE, M.FIRST_NAME || ' ' || M.LAST_NAME MANAGER
FROM EMPLOYEE E
         LEFT JOIN EMPLOYEE M ON E.MANAGER_ID = M.EMPLOYEE_ID
ORDER BY MANAGER;

SELECT *
FROM FILM;

-- 상영시간은 동일하면서 영화는 서로 다른 영화
SELECT F1.TITLE, F2.TITLE, F1.LENGTH
FROM FILM F1
         INNER JOIN FILM F2 ON F1.FILM_ID <> F2.FILM_ID AND F1.LENGTH = F2.LENGTH;