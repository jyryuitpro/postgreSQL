SELECT A.ID ID_A, A.FRUIT FRUIT_A, B.ID ID_B, B.FRUIT FRUIT_B
FROM BASKET_A A
         FULL OUTER JOIN BASKET_B B ON A.FRUIT = B.FRUIT;


SELECT A.ID ID_A, A.FRUIT FRUIT_A, B.ID ID_B, B.FRUIT FRUIT_B
FROM BASKET_A A
         FULL OUTER JOIN BASKET_B B ON A.FRUIT = B.FRUIT
WHERE A.ID IS NULL -- right outer
   OR B.ID IS NULL; -- left outer

CREATE TABLE
    IF NOT EXISTS DEPARTMENTS
(
    DEPARTMENT_ID   SERIAL PRIMARY KEY,
    DEPARTMENT_NAME VARCHAR(255) NOT NULL
);

CREATE TABLE
    IF NOT EXISTS EMPLOYEES
(
    EMPLOYEE_ID   SERIAL PRIMARY KEY,
    EMPLOYEE_NAME VARCHAR(255),
    DEPARTMENT_ID INTEGER
);

INSERT INTO DEPARTMENTS
    (DEPARTMENT_NAME)
VALUES ('Sales')
     , ('Marketing')
     , ('HR')
     , ('IT')
     , ('Production');

COMMIT;

INSERT INTO EMPLOYEES( EMPLOYEE_NAME
                     , DEPARTMENT_ID)
VALUES ('BetteNicholson', 1),
       ('ChristianGable', 1),
       ('JoeSwank', 2),
       ('FredCostner', 3),
       ('SandraKilmer', 4),
       ('JuliaMcqueen', NULL);

COMMIT;

SELECT *
FROM DEPARTMENTS;

SELECT *
FROM EMPLOYEES;

SELECT E.EMPLOYEE_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E
         FULL OUTER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT E.EMPLOYEE_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E
         FULL OUTER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE E.EMPLOYEE_NAME IS NULL; -- 소속된 직원이 없는 부서

SELECT E.EMPLOYEE_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E
         FULL OUTER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE D.DEPARTMENT_ID IS NULL; -- 소속된 부서가 없는 직원



